"""
Django settings for support_project project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from .middleware import Custom404Middleware

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
STATIC_DIR = os.path.join(BASE_DIR, 'static')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-%nr8*&yrdbhmmy!h42s0kno-68u9v4!g!tf@19o7i6^r4jwyg!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# using gcloud database then G_CLOUD_SQL_DB = True else using at localhost (ex. xampp) G_CLOUD_SQL_DB = false
G_CLOUD_SQL_DB = True

# using localhost to run RUN_AT_LOCALHOST = True, if using in server RUN_AT_LOCALHOST = False
RUN_AT_LOCALHOST = True
if RUN_AT_LOCALHOST == False:
    APPEND_SLASH = True
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_SSL_REDIRECT = True

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = [
#     f'support.pes.edu',
#     f'www.support.pes.edu',
#     f'support-app-service-dot-support-app-439510.el.r.appspot.com',
#     f'support-v1-dot-support-app-439510.el.r.appspot.com',
#     f'support-v2-dot-support-app-439510.el.r.appspot.com',
#     f'127.0.0.1'
#     ]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'support_app',
]

MIDDLEWARE = [
    # custom middelware
    'support_project.middleware.Custom404Middleware',
    # other middleware classes
    'htmlmin.middleware.HtmlMinifyMiddleware',
    'htmlmin.middleware.MarkRequestMiddleware',
    
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'support_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATES_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'form_filters': 'support_app.templatetags.form_filters',
                'custom_tags': 'support_app.templatetags.custom_tags',
            },
        },
    },
]

WSGI_APPLICATION = 'support_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

if G_CLOUD_SQL_DB == True:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': '/cloudsql/focus-copilot-438910-g0:asia-south1:django-apps-db',
            'NAME': 'support_app_db',
            'USER': 'django-apps-user',
            'PASSWORD': '/h8v64^UPjEj+lDT',
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'HOST': 'localhost',
            'NAME': 'support_app_db',
            'USER': 'root',
            'PASSWORD': '',
            'PORT': '3306',
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Kolkata'  # or your local timezone

USE_I18N = True

USE_TZ = True

HTML_MINIFY = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

# Set the GOOGLE_APPLICATION_CREDENTIALS environment variable
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = os.path.join(BASE_DIR, 'credential.json')
from google.oauth2 import service_account
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(os.path.join(BASE_DIR, 'credential.json'))

# from google.oauth2 import service_account
# GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
# os.path.join(BASE_DIR, 'credential.json'))

from google.cloud import storage

# Set the Google Cloud Storage bucket name
BUCKET_NAME = 'support-app-439510.appspot.com'

# Set the default storage class to use Google Cloud Storage
DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

# Configure the Google Cloud Storage settings
GS_BUCKET_NAME = BUCKET_NAME  # Replace with your bucket name
GS_BUCKET_LOCATION = 'asia-south1'  # Replace with your bucket location
GS_PROJECT_ID = 'support-app-439510'  # Replace with your project ID

STATIC_URL = 'static/'
STATICFILES_DIRS = [STATIC_DIR]

# MEDIA_URL = 'uploads/'
# MEDIA_ROOT = BASE_DIR / 'static/uploads'

MEDIA_URL = f'https://storage.googleapis.com/{BUCKET_NAME}/'
MEDIA_ROOT = f'gs://{BUCKET_NAME}/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


AUTH_USER_MODEL = 'support_app.User'